package spring.abc;
import java.util.Map;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.validation.ConstraintViolation;
import javax.validation.Validation;
import javax.validation.Validator;
import javax.validation.ValidatorFactory;

import org.springframework.stereotype.Controller;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
@Service(value="jack")
@Controller
public class HelloController {
	//produces指定生产什么类型的内容，如produces="application/json"表示JSON类型的内容，Spring的根据相应的HttpMessageConverter进行请求内容区数据到@RequestBody注解的命令对象的转换，Spring会根据相应的HttpMessageConverter进行模型数据（返回值）到JSON响应内容的转换
	//可以不需要前面的/，即可以@RequestMapping(value="hello")，这里也可以省略produces
	@RequestMapping(value="/hello",produces="text/html;charset=UTF-8") // 如果@RequestMapping(value={"/payWebUnify.action","/payWebUnify.do"})，则两个请求都可以进来
	@ResponseBody
	public String helloWorld (@RequestParam Map<String,String> params,HttpServletRequest request,Map<String,Object> context) { // 得到request，得到上下文context，用户请求的参数可以自动放入params
		PayReqModel payReqModel = new PayReqModel();
		payReqModel.setBusiCode(request.getParameter("username"));
		payReqModel.setMerchantID(params.get("password"));
		payReqModel.setPgUrl(params.get("mac"));
		ValidatorFactory validatorFactory = Validation.buildDefaultValidatorFactory();
		Validator validator = validatorFactory.getValidator();
		Set<ConstraintViolation<PayReqModel>> violations = validator.validate(payReqModel);
		System.out.println(violations.size());
		for (ConstraintViolation<PayReqModel> violation : violations) {
         		System.out.println(violation.getMessage());
		}
		return "hello";
	}
}
-------------------------------------------------------------
package spring.abc;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import org.hibernate.validator.constraints.NotBlank;
import org.hibernate.validator.constraints.URL;

import javax.validation.constraints.Pattern;
import java.io.Serializable;

@ToString
@Getter
@Setter
public class PayReqModel  implements Serializable {
    private static final long serialVersionUID = -2282310962065763357L;
    
    @NotBlank(message="商户号不能为空")
    @Pattern(regexp = "[0-9]{1,30}",message="商户代码格式有误")
    private String merchantID;

    @NotBlank(message="前台通知地址不能为空")
    @URL(regexp = ".*", protocol="ftp", host="192.0.1.1", port=89, message="前台通知地址有误") // regexp = ".*"表示匹配所有的，protocol="ftp"表示ftp协议(地址前面必须是ftp://)，host="192.0.1.1"表示主机地址(ip地址必须是192.0.1.1)，port=89表示端口号必须是89。合并起来的地址就是:ftp://192.0.1.1:89/bestpay
    private String pgUrl;

    @NotBlank(message = "业务类型不能为空")
    @Pattern(regexp ="(0001)|(0001000001)|(0001000002)|(0010000)|(0002000)",message="业务类型格式有误")
    private String busiCode;

}
-------------------------------------------------------------
请求url为：
http://localhost/springMVC/hello?username=aaa&password=bbb&mac=ftp://192.0.1.1:89/bestpay














